<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2022 by Stefan Schubert under the MIT License (MIT).
  ~ See project LICENSE file for the detailed terms and conditions.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <description>Dient dem Setup des ben√∂tigten DB-Schemas und der Schemaevolution</description>
    <inceptionYear>2015</inceptionYear>

    <groupId>de.bluewhale</groupId>
    <artifactId>sabi-database</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>sabi-database</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>17</java.version>
        <flyway.version>9.1.3</flyway.version>
        <mariadb.client.version>3.0.7</mariadb.client.version>
        <maven.compile.plugin.version>3.10.1</maven.compile.plugin.version>
        <maven.versions.plugin.version>2.11.0</maven.versions.plugin.version>
        <owasp.plugin.version>7.1.2</owasp.plugin.version>
        <!-- Uncomment those or place them into your maven settings.xml in an own profile as I won't
        checkin those secrets for stage and production
        <mariadb.schema>sabi</mariadb.schema>
        <mariadb.server.name>localhost</mariadb.server.name>
        <mariadb.server.port>3306</mariadb.server.port>
        <mariadb.server.app.username>sabiapp</mariadb.server.app.username>
        <mariadb.server.app.password>sabi123</mariadb.server.app.password>
        -->
    </properties>

    <developers>
        <!-- PLEASE ADD YOURSELF HERE for maven site docu
        If you like to have an image link, you need to have a gravatar registered with the used email address here. -->
        <developer>
            <id>StS</id>
            <name>Stefan Schubert</name>
            <email>stefan.schubert@bluewhale.de</email>
            <roles>
                <role>Project-Maintainer</role>
                <role>Product-Owner</role>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>

    <profiles>
        <profile>
            <!-- Used to maintain the database DB -->
            <id>configure_flyway</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.flywaydb</groupId>
                        <artifactId>flyway-maven-plugin</artifactId>
                        <version>${flyway.version}</version>
                        <configuration>
                            <url>jdbc:mariadb://${mariadb.server.name}:${mariadb.server.port}/${mariadb.schema}</url>
                            <user>${mariadb.server.app.username}</user>
                            <password>${mariadb.server.app.password}</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>clean database</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                    <goal>baseline</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>update database</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>migrate</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>update metatable</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>info</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.mariadb.jdbc</groupId>
                                <artifactId>mariadb-java-client</artifactId>
                                <version>${mariadb.client.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compile.plugin.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <!-- This will check for newer version on dependencies which are
                     controlled by version property variables -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${maven.versions.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <!--                            <goal>display-dependency-updates</goal>-->
                            <!--                            <goal>display-plugin-updates</goal>-->
                            <goal>display-property-updates</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Used for vulnerability checks
                 The examples below can be executed using mvn verify.
                 -->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${owasp.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

</project>